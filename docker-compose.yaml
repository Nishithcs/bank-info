version: "3.8"
services:
  #  PostgreSQL Database
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-bank_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-bank_password}
      POSTGRES_DB: ${POSTGRES_DB:-bank_db}
    ports:
      - "5432:5432"

  #  MongoDB Database
  mongo:
    image: mongo:5.0-rc
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-mongo_user}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-mongo_password}
    ports:
      - "27017:27017"

  #  RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    ports:
      - "5672:5672"    #  AMQP port
      - "15672:15672"  #  Management UI port

  #  Go API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./api"] #  Override the CMD
    ports:
      - "8080:8080"
    depends_on:
      - db
      - mongo
      - rabbitmq
    environment:
      POSTGRES_HOST: db
      MONGO_HOST: mongo
      RABBITMQ_HOST: rabbitmq

  #  Go Worker Service
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./worker"] #  Override the CMD
    depends_on:
      - db
      - mongo
      - rabbitmq
    environment:
      POSTGRES_HOST: db
      MONGO_HOST: mongo
      RABBITMQ_HOST: rabbitmq

#  Declare volumes for persistent data
volumes:
  postgres_data:
  mongo_data: